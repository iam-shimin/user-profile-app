{"version":3,"sources":["components/fieldset.jsx","utils/http.js","store/actionTypes.js","pages/loginPage.jsx","store/actionCreators.js","pages/welcomePage.jsx","components/password.jsx","components/email.jsx","services/validateEmail.js","pages/registrationPage.jsx","components/loader.jsx","components/alert.jsx","App.jsx","components/withAuth.jsx","serviceWorker.js","store/index.js","store/rootReducer.js","index.js"],"names":["Fieldset","givenId","id","label","name","type","value","className","onChange","props","htmlFor","defaultProps","setToken","token","axios","defaults","headers","common","baseURL","interceptors","response","use","error","Promise","reject","get","post","loginTypes","registerType","profileFetchTypes","mapDispatchToProps","login","userCredentials","callback","dispatch","http","then","payload","data","catch","connect","history","useState","email","password","values","setValues","handleChange","event","target","current","onSubmit","preventDefault","push","to","DescriptionItem","term","desc","getProfile","console","log","state","userName","username","phone","updated","created","useEffect","href","map","item","Password","setValue","isValid","Email","setError","timer","setTimeout","success","clearTimeout","message","details","register","userData","useCallback","isLoading","appPendingState","appErrorState","hasError","AuthedWelcomePage","WrappedComponent","Auth","this","isAuthed","rest","React","Component","withAuth","WelcomePage","App","path","component","LoginPage","RegistrationPage","Boolean","window","location","hostname","match","combinedEnhancers","initialState","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","store","createStore","action","endsWith","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2055656.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Fieldset({id: givenId, label, name, type, value, className, onChange, ...props}) {\r\n\r\n\tconst id = givenId || name;\r\n\t\r\n\treturn (\r\n\t\t<fieldset {...props}>\r\n\t\t\t<label htmlFor={id}>{label}</label>\r\n\t\t\t<input type={type} value={value} name={name} id={id} className={className} onChange={onChange && onChange} />\r\n\t\t</fieldset>\r\n\t)\r\n}\r\n\r\nFieldset.propTypes = {\r\n\tid: PropTypes.string,\r\n\tlabel: PropTypes.string.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tonChange: PropTypes.func\r\n}\r\n\r\nFieldset.defaultProps = {\r\n\ttype: 'text'\r\n}\r\n\r\nexport default Fieldset;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://devgroceryapi.spericorn.com/api';\r\n\r\naxios.interceptors.response.use(null, error => {\r\n\treturn Promise.reject(error);\r\n})\r\n\r\nexport function setToken(token) {\r\n\taxios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n}\r\n\r\nexport default {\r\n\tget: axios.get,\r\n\tpost: axios.post\r\n}","const LOGIN_PENDING = 'LOGIN_PENDING';\r\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nconst LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\nconst REGISTER_PENDING = 'REGISTER_PENDING';\r\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nconst REGISTER_FAILURE = 'REGISTER_FAILED';\r\n\r\nconst PROFILE_FETCH_PENDING = 'PROFILE_FETCH_PENDING';\r\nconst PROFILE_FETCH_SUCCESS = 'PROFILE_FETCH_SUCCESS';\r\nconst PROFILE_FETCH_FAILURE = 'PROFILE_FETCH_FAILED';\r\n\r\nexport const loginTypes = {\r\n\tLOGIN_PENDING,\r\n\tLOGIN_SUCCESS,\r\n\tLOGIN_FAILED\r\n}\r\n\r\nexport const registerType = {\r\n\tREGISTER_PENDING,\r\n\tREGISTER_SUCCESS,\r\n\tREGISTER_FAILURE\r\n}\r\n\r\nexport const profileFetchTypes = {\r\n\tPROFILE_FETCH_PENDING,\r\n\tPROFILE_FETCH_SUCCESS,\r\n\tPROFILE_FETCH_FAILURE\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Fieldset from 'components/fieldset';\r\n\r\nimport { login } from 'store/actionCreators';\r\n\r\nimport 'style/form.css';\r\n\r\nfunction LoginPage({ login, history }) {\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t})\r\n\r\n\tfunction handleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tlogin(values, () => {\r\n\t\t\thistory.push('/');\r\n\t\t})\r\n\t}\r\n\r\n\tfunction handleChange(event) {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetValues(current => ({...current, [name]: value}));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<form className=\"form form--login\" onSubmit={handleSubmit}>\r\n\t\t\t\t<Fieldset\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\tonChange={handleChange} />\r\n\r\n\t\t\t\t<Fieldset\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\tonChange={handleChange} />\r\n\t\t\t\t\t\r\n\t\t\t\t<button>Submit</button>\r\n\t\t\t</form>\r\n\r\n\t\t\t<div className=\"w-50 mg-a\">\r\n\t\t\t\tNew here? <Link to=\"/register\">Register</Link>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tlogin: login\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage);","import http, { setToken } from 'utils/http';\r\nimport { loginTypes, registerType } from './actionTypes';\r\n\r\n\r\nexport function login(userCredentials, callback) {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: loginTypes.LOGIN_PENDING});\r\n\t\thttp\r\n\t\t\t.post('/auth/login', userCredentials)\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: loginTypes.LOGIN_SUCCESS,\r\n\t\t\t\t\tpayload: response.data.data\r\n\t\t\t\t});\r\n\t\t\t\tsetToken(response.data.data.token);\r\n\t\t\t\tcallback();\r\n\t\t\t})\r\n\t\t\t.catch(error => dispatch({\r\n\t\t\t\ttype: loginTypes.LOGIN_FAILED,\r\n\t\t\t\tpayload: error\r\n\t\t\t}))\r\n\t}\r\n}\r\n\r\nexport function register(userData, callback) {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: registerType.REGISTER_PENDING});\r\n\t\thttp\r\n\t\t\t.post('/auth/register', userData)\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch({ type: registerType.REGISTER_SUCCESS, payload: response.data });\r\n\t\t\t\tsetToken(response.data.data.token);\r\n\t\t\t\tcallback();\r\n\t\t\t}).catch(error => dispatch({\r\n\t\t\t\ttype: registerType.REGISTER_FAILURE,\r\n\t\t\t\tpayload: error\r\n\t\t\t}))\r\n\t}\r\n}\r\n\r\nexport function getProfile() {\r\n\treturn dispatch => {\r\n\t\tdispatch({type: 'PROFILE_FETCH_PENDING'});\r\n\t\thttp\r\n\t\t\t.get('/user')\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t\tdispatch({type: 'PROFILE_FETCH_SUCCESS', payload: response.data.data})\r\n\t\t\t})\r\n\r\n\t}\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getProfile } from 'store/actionCreators';\r\n\r\nimport 'style/welcome.css';\r\n\r\nfunction WelcomePage({ state, getProfile }) {\r\n\tconst { username: userName, email, phone, updated, created } = state;\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfile();\r\n\t}, [getProfile]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className=\"app-header\">\r\n\t\t\t\t<span>App</span>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<a href=\"/logout\">Logout</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\r\n\t\t\t<section className=\"mt-4\">\r\n\t\t\t\t<h1 className=\"welcome-text\">Welcome, {userName}</h1>\r\n\t\t\t</section>\r\n\r\n\t\t\t<section className=\"w-50 mg-a\">\r\n\t\t\t\t<h2>Details</h2>\r\n\t\t\t\t<span className=\"time-desc\">Created: <span>{created}</span></span>\r\n\t\t\t\t<span className=\"time-desc\">Updated: <span>{updated}</span></span>\r\n\t\t\t\t<div className=\"user-details\">\r\n\t\t\t\t\t<DescriptionItem term=\"Email\" desc={email} />\r\n\t\t\t\t\t<DescriptionItem term=\"Phone\" desc={phone} />\r\n\t\t\t\t\t{[\r\n\t\t\t\t\t\t\"id\",\r\n\t\t\t\t\t\t\"firstName\",\r\n\t\t\t\t\t\t\"lastName\",\r\n\t\t\t\t\t\t\"usertype_id\",\r\n\t\t\t\t\t\t\"profilePic\",\r\n\t\t\t\t\t\t\"store_id\",\r\n\t\t\t\t\t\t\"created_by\",\r\n\t\t\t\t\t\t\"updated_by\"\r\n\t\t\t\t\t].map(item => <DescriptionItem term={item} desc={state[item] || 'null'} />)}\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nfunction DescriptionItem({term, desc}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span className=\"term\">{term}</span>\r\n\t\t\t<span className=\"desc\">{desc}</span>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tstate\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tgetProfile\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WelcomePage)","import React, { useEffect, useState } from 'react';\r\n\r\nimport Fieldset from 'components/fieldset';\r\n\r\nexport default function Password({onChange}) {\r\n\r\n\tconst [value, setValue] = useState({\r\n\t\tpassword: '',\r\n\t\t'c-password': ''\r\n\t});\r\n\r\n\tconst isValid = value.password === value[\"c-password\"];\r\n\r\n\tfunction handleChange(event) {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetValue(current => ({...current, [name]: value}));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isValid) {\r\n\t\t\tonChange({\r\n\t\t\t\ttarget: {\r\n\t\t\t\t\tvalue: value.password,\r\n\t\t\t\t\tname: 'password'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, [isValid, value.password, onChange]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Fieldset label=\"Password\" value={value.password} onChange={handleChange} name=\"password\" type=\"password\" />\r\n\t\t\t<Fieldset label=\"Confirm Password\" value={value['c-password']} onChange={handleChange} name=\"c-password\" type=\"password\" />\r\n\r\n\t\t\t{!isValid && <small className=\"validation-error\">Passwords should match</small>}\r\n\t\t</>\r\n\t)\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport Fieldset from './fieldset';\r\n\r\nimport emailValidationService from 'services/validateEmail';\r\n\r\nexport default function Email({ name = \"email\", onChange }) {\r\n\tconst [value, setValue] = useState('');\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst isValid = !error;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timer = setTimeout(() => {\r\n\t\t\tif (value) {\r\n\t\t\t\tsetError(null);\r\n\t\t\t\temailValidationService(value)\r\n\t\t\t\t\t.then(data => {\r\n\t\t\t\t\t\tconst emailExist = !data.success;\r\n\t\t\t\t\t\tif (emailExist) {\r\n\t\t\t\t\t\t\tsetError(data);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tonChange({target: { name, value }})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => setError(error));\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\r\n\t\treturn () => clearTimeout(timer);\r\n\t}, [value, name, onChange]);\r\n\r\n\treturn (\r\n\t<>\r\n\t\t<Fieldset\r\n\t\t\tlabel=\"Email\"\r\n\t\t\tvalue={value}\r\n\t\t\tname={name}\r\n\t\t\ttype=\"email\"\r\n\t\t\tclassName={isValid? 'green-br': ''}\r\n\t\t\tonChange={event => {\r\n\t\t\t\tconst {value} = event.target;\r\n\t\t\t\tsetValue(value);\r\n\t\t\t}} />\r\n\r\n\t\t{error && <small className=\"validation-error\">{error?.message || error?.details || 'Cannot complete request'}</small>}\r\n\t</>\r\n\t)\r\n}","import http from \"utils/http\";\r\n\r\nexport default function validate(email) {\r\n\treturn http\r\n\t\t.post('/auth/checkMail', {email})\r\n\t\t.then(response => response.data);\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Fieldset from 'components/fieldset';\r\nimport Password from 'components/password';\r\nimport Email from 'components/email';\r\n\r\nimport { register } from 'store/actionCreators';\r\n\r\nimport 'style/form.css';\r\n\r\nfunction RegistrationPage({register, history}) {\r\n\tconst [values, setValues] = useState({\r\n\t\tusername: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\tpassword: ''\r\n\t})\r\n\r\n\tconst handleChange = useCallback(event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetValues(current => ({...current, [name]: value}));\r\n\t}, [])\r\n\r\n\tfunction handleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tregister(values, () => {\r\n\t\t\thistory.push('/');\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<form className=\"form form--registration-form\" onSubmit={handleSubmit}>\r\n\t\t\t\t<Fieldset label=\"User Name\" value={values.username} name=\"username\" onChange={handleChange} />\r\n\t\t\t\t<Email name=\"email\" value={values.email} onChange={handleChange} />\r\n\t\t\t\t<Fieldset label=\"Phone\" value={values.phone} name=\"phone\" type=\"tel\" onChange={handleChange} />\r\n\t\t\t\t<Password value={values.password} onChange={handleChange} />\r\n\t\t\t\t<button>Submit</button>\r\n\t\t\t</form>\r\n\r\n\t\t\t<div className=\"w-50 mg-a\">\r\n\t\t\t\tHave an account? <Link to=\"/login\">Log In</Link>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tregister: register\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrationPage)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Loader({isLoading}) {\r\n\treturn <div className={`loader${isLoading? ' active': ''}`}></div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisLoading: state.appPendingState\r\n})\r\n\r\nexport default connect(mapStateToProps)(Loader);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Alert({error}) {\r\n\r\n\tconst hasError = !!error;\r\n\r\n\treturn (\r\n\t\t<div className={`alert-box${hasError? ' active': ''}`}>\r\n\t\t\t<span>{error?.message}</span>\r\n\t\t\t{error?.details && <p>{error.details}</p>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\terror: state.appErrorState\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert);","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport LoginPage from 'pages/loginPage';\nimport WelcomePage from 'pages/welcomePage';\nimport RegistrationPage from 'pages/registrationPage';\nimport withAuth from 'components/withAuth';\nimport Loader from 'components/loader';\nimport Alert from 'components/alert';\n\nimport 'style/App.css';\n\nconst AuthedWelcomePage = withAuth(WelcomePage);\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Loader />\n      <Alert />\n      <Switch>\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/register\" component={RegistrationPage} />\n        <Route path=\"/\" component={AuthedWelcomePage} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function withAuth(WrappedComponent) {\r\n\tclass Auth extends React.Component {\r\n\t\tstatic defaultProps = {\r\n\t\t\tisAuthed: false\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\tconst { isAuthed, ...rest } = this.props;\r\n\r\n\t\t\tif (!isAuthed) {\r\n\t\t\t\treturn <Redirect to=\"/login\" />;\r\n\t\t\t}\r\n\r\n\t\t\treturn <WrappedComponent {...rest} />\r\n\t\t}\r\n\t}\r\n\r\n\tconst mapStateToProps = state => ({\r\n\t\tisAuthed: !!state.id\r\n\t})\r\n\r\n\treturn connect(mapStateToProps)(Auth);\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nlet combinedEnhancers;\r\n\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n\tcombinedEnhancers = compose(\r\n\t\tapplyMiddleware(thunk),\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n} else {\r\n\tcombinedEnhancers = applyMiddleware(thunk);\r\n}\r\n\r\nconst store = createStore(rootReducer, {}, combinedEnhancers);\r\n\r\nexport default store;","import { registerType, loginTypes, profileFetchTypes } from './actionTypes';\r\n\r\nconst initialState = {};\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n\tif (action.type.endsWith('PENDING')) {\r\n\t\treturn {...state, appPendingState: true};\r\n\t}\r\n\r\n\tif (action.type.endsWith('FAILED')) {\r\n\t\treturn {...state, appErrorState: action.payload, appPendingState: false}\r\n\t}\r\n\r\n\tswitch (action.type) {\r\n\t\tcase registerType.REGISTER_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload.data.userData,\r\n\t\t\t\tappPendingState: false,\r\n\t\t\t\tappErrorState: null\r\n\t\t\t};\r\n\r\n\t\tcase loginTypes.LOGIN_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload.userData,\r\n\t\t\t\tappPendingState: false,\r\n\t\t\t\tappErrorState: null\r\n\t\t\t};\r\n\r\n\t\tcase profileFetchTypes.PROFILE_FETCH_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload.userData,\r\n\t\t\t\tappPendingState: false,\r\n\t\t\t\tappErrorState: null\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from 'store';\n\nimport 'style/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}